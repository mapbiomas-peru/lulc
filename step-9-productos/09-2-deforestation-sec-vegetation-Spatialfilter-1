/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-83.19464280358112, 2.462409177933863],
          [-83.19464280358112, -19.64048723768736],
          [-67.02276780358112, -19.64048723768736],
          [-67.02276780358112, 2.462409177933863]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//
var asset = 'projects/mapbiomas-raisg/MAPBIOMAS-PERU/COLECCION2/PRODUTOS-1/deforestacion-vegetacion-secundaria';
var assetclasif = 'projects/earthengine-legacy/assets/projects/mapbiomas-raisg/MAPBIOMAS-PERU/COLECCION2/INTEGRACION/integracion-pais/PERU-6';
var assetBiomas = "projects/mapbiomas-raisg/MAPBIOMAS-PERU/DATOS-AUXILIARES/ESTADISTICAS/COLECCION2/bioma-pais-raster";
var assetOutput = 'projects/mapbiomas-raisg/MAPBIOMAS-PERU/COLECCION2/PRODUTOS-1/deforestacion-vegetacion-secundaria-ft';
var assetOutputDeforest = 'projects/mapbiomas-raisg/MAPBIOMAS-PERU/COLECCION2/PRODUTOS-1';

var version = '1';
var versionOut = '1';

var description = 'Version con filtro espacial de 1ha acumulado por categoria de deforestacion';

var years = [
    1985, 1986,
    1987, 1988, 1989, 1990,
    1991, 1992, 1993, 1994,
    1995, 1996, 1997, 1998,
    1999, 2000, 2001, 2002,
    2003, 2004, 2005, 2006,
    2007, 2008, 2009, 2010,
    2011, 2012, 2013, 2014,
    2015, 2016, 2017, 2018,
    2019, 2020, 2021, 2022
];

var integrated = ee.Image(assetclasif);
var biomas = ee.Image(assetBiomas);

// import modules
var palette = require('users/mapbiomas/modules:Palettes.js').get('classification8');

Map.addLayer(integrated, {
    'bands': ['classification_2022'],
    'min': 0,
    'max': 62,
    'palette': palette,
    'format': 'png' 
}, 'classification_2022', false);



var coll_transitions = ee.ImageCollection(asset)
             .filter(ee.Filter.eq('version', version))
    // .min();
print(coll_transitions)

var NO_AMAZONIA = coll_transitions.filter(ee.Filter.eq('region', 'NO-AMAZONIA')).min().updateMask(biomas.neq(4))
var AMAZONIA = coll_transitions.filter(ee.Filter.eq('region', 'AMAZONIA')).min().updateMask(biomas.eq(4)) 

var transitions = AMAZONIA.blend(NO_AMAZONIA);
    

print(transitions);

var visTransitions = {
    min: 0,
    max: 7,
    format: 'png',
    bands: 'classification_2021',
    palette: [
        '#ffffff', // [0] No data
        '#faf5d1', // [1] Antrópico
        '#3f7849', // [2] Veg. Primária
        '#5bcf20', // [3] Veg. Secundária
        '#ea1c1c', // [4] Supressão Veg. Primária (Perdidad de Veg. Primaria)
        '#b4f792', // [5] Recuperação para Veg. Secundária
        '#fe9934', // [6] Supressão Veg. Secundária
        '#303149', // [7] Outras transições
    ]
};


Map.addLayer(transitions, visTransitions, 'transitions');

var deforestationHistory = years.map(
    function (year) {
        var band = 'classification_' + year.toString();

        var deforestationYear = transitions.select(band)
            .remap(
                [
                    4,
                    6,
                ],
                [
                    year * 10 + 4,
                    year * 10 + 6,
                ]);

        return deforestationYear.rename(band);
    }
);

deforestationHistory = ee.Image(deforestationHistory).reduce(ee.Reducer.min());

//
var dfSvHistory = years.map(
    function (year) {
        var band = 'classification_' + year.toString();

        var deforestationYear = transitions.select(band)
            .remap(
                [
                    6,
                ],
                [
                    year * 10 + 6,
                ]);

        return deforestationYear.rename(band);
    }
);

dfSvHistory = ee.Image(dfSvHistory).reduce(ee.Reducer.min());

var svHistory = years.map(
    function (year) {
        var band = 'classification_' + year.toString();

        var svYear = transitions.select(band)
            .remap(
                [
                    3,
                    5,
                ],
                [
                    year * 10 + 3,
                    year * 10 + 5,
                ]);

        return svYear.rename(band);
    }
);

svHistory = ee.Image(svHistory).reduce(ee.Reducer.min());

var visDefoerstation = {
    min: 19850,
    max: 20226,
    format: 'png',
    palette: [
        '#fcebff',
        '#c05bd2',
        '#5a005c',
    ]
};

Map.addLayer(deforestationHistory, visDefoerstation, 'Deforestation history');

//
var dfConnected = deforestationHistory
    .connectedPixelCount({
        maxSize: 12,
        eightConnected: false
    });

//
var dsConnected = dfSvHistory
    .connectedPixelCount({
        maxSize: 12,
        eightConnected: false
    });

//
var svConnected = svHistory
    .gt(0)
    .connectedPixelCount({
        maxSize: 12,
        eightConnected: false
    });

//
dfConnected = dfConnected.reproject('epsg:4326', null, 30);
dsConnected = dsConnected.reproject('epsg:4326', null, 30);
svConnected = svConnected.reproject('epsg:4326', null, 30);

Map.addLayer(dfConnected, {
    min: 1,
    max: 12,
    format: 'png',
    palette: [
        '#fbff06',
        '#04ff00',
        '#1000ff',
        '#0c003d'
    ]
},
    "dfConnected",
    false
);

Map.addLayer(svConnected, {
    min: 1,
    max: 12,
    format: 'png',
    palette: [
        '#fbff06',
        '#04ff00',
        '#1000ff',
        '#0c003d'
    ]
},
    "svConnected",
    false
);

var transitionsFt = transitions
    .where(dfConnected.lte(11).and(transitions.eq(4)), 7)
    .where(dsConnected.lte(11).and(transitions.eq(6)), 7)
    .where(svConnected.lte(11).and(transitions.eq(3)), 7)
    .where(svConnected.lte(11).and(transitions.eq(5)), 7);

Map.addLayer(transitionsFt, visTransitions, 'transitions ft');

//
var assetGrids = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/grid-world';

var grids = ee.FeatureCollection(assetGrids);

var gridNames = [
  "SA-17",
  "SA-18",
  "SA-19",
  "SB-17",
  "SB-18",
  "SB-19",
  "SC-17",
  "SC-18",
  "SC-19",
  "SD-18",
  "SD-19",
  "SE-18",
  "SE-19",
];

gridNames.forEach(
    function (gridName) {
        var grid = grids.filter(ee.Filter.stringContains('name', gridName))

        Export.image.toAsset({
            image: transitionsFt
                .set('version', versionOut)
                .set('description', description),
            description: gridName + "-" + versionOut,
            assetId: assetOutput + "/" + gridName + "-" + versionOut,
            pyramidingPolicy: {
                '.default': 'mode'
            },
            region: grid.geometry().buffer(300).bounds(),
            scale: 30,
            maxPixels: 1e13
        });
    }
);

print('deforestationHistory',deforestationHistory)
  Export.image.toAsset({
      image: deforestationHistory
          .set('version', versionOut)
          .set('description', 'deforestacion'),
      description: 'deforestacion' + "-" + versionOut,
      assetId: assetOutputDeforest + "/" + 'deforestacion' + "-" + versionOut,
      pyramidingPolicy: {
          '.default': 'mode'
      },
      region: geometry,
      scale: 30,
      maxPixels: 1e13
  });


//
// ----------------------------------------------------------
// Calculate Areas
// ----------------------------------------------------------

var pixelArea = ee.Image.pixelArea().divide(1000000);

var getProperties = function (item) {

    item = ee.Dictionary(item);

    return {
        "area": ee.Number(item.get('sum')),
        "year": ee.String(item.get('group'))
    };

};

/**
* Helper function
* @param item 
*/
var convert2featCollection = function (item) {

    item = ee.Dictionary(item);

    var feature = ee.Feature(null)
        .set('year', item.get('group'))
        .set("area", item.get('sum'));


    return feature;
};

/**
* Calculate area crossing a cover map (deforestation, mapbiomas)
* and a region map (states, biomes, municipalites)
* @param image 
* @param feature
*/
var calculateArea = function (image, feature) {

    var areas = pixelArea.addBands(image)
        .reduceRegion({
            reducer: ee.Reducer.sum().group(1),
            geometry: feature.geometry(),
            scale: 30,
            maxPixels: 1e13
        });

    areas = ee.FeatureCollection(
        ee.List(areas.get('groups'))
        .map(convert2featCollection)
        .map(
            function(f){
                return ee.Feature(f).copyProperties(feature);
            }
        )
    );

    return areas;
};

var exportAreas = function (areas, name) {

    Export.table.toDrive({
        "collection": areas,
        "fileFormat": "CSV",
        "description": name,
        "folder": 'Estadisticas-def'
    });
};

// Biomes
var biomas = ee.FeatureCollection('projects/mapbiomas-raisg/MAPBIOMAS-PERU/DATOS-AUXILIARES/ESTADISTICAS/COLECCION2/bioma-pais')

var deforestationBiomas = biomas.map(
    function (feature) {
        return calculateArea(deforestationHistory, feature);
    }
);

deforestationBiomas = deforestationBiomas.flatten();

exportAreas(deforestationBiomas, 'deforestation-pe-' + '-col2-' + version);













// Añadimos una leyenda para visualizar
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});
 
var legendTitle = ui.Label({
  value: 'Leyenda',
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});
var legendDesc = ui.Label({
  value: '---Transitions-----',
  style: {
    //fontWeight: 'bold',
    fontSize: '14px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});
 
legend.add(legendTitle);
legend.add(legendDesc);
var makeRow = function(color, name) {
      var colorBox = ui.Label({ 
        style: {
          backgroundColor: '#' + color,
          fontSize: '14px',
          padding: '6px',
          margin: '0 0 4px 0'
        }
      });
 
var description = ui.Label({
        value: name,
        style: {
          margin: '0 0 4px 6px',
          fontSize: '14px',
        }
      });
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};

        

var Elemento =[
    // Color   Nombre de clase           Clase    Nivel
    // ['ff0000', 'Solo deforestación en Bolivia Col-1'],
    // ['00ff00', 'Deforestación en ambos'],
    // ['0000ff', 'Solo deforestación en Script nuevo'],
    // ['ffffff', '------------'],
    ['ffffff', '[0] No data'],
    ['faf5d1', '[1] Antrópico'],
    ['3f7849', '[2] Veg. Primária'],
    ['5bcf20', '[3] Veg. Secundária'],
    ['ea1c1c', '[4] Supressão Veg. Primária'],
    ['b4f792', '[5] Recuperação para Veg. Secundária'],
    ['fe9934', '[6] Supressão Veg. Secundária'],
    ['303149', '[7] Outras transições'],
  ]
Elemento.forEach(function(ele){
  legend.add(makeRow(ele[0], ele[1]))
})

Map.add(legend);



// LEYENDA DEFOREST
var ColorRamp = require('users/joaovsiqueira1/packages:ColorRamp.js');

ColorRamp.init(
    {
        'orientation': 'horizontal',
        'backgroundColor': '212121',
        'fontColor': 'ffffff',
        'height': '10px',
        'width': '300px',
    }
);

ColorRamp.add({
    'title': 'Year Deforestacion Transitions',
    'min': visDefoerstation.min,
    'max': visDefoerstation.max,
    'palette': visDefoerstation.palette,
});

// Get legend widget
var legend = ColorRamp.getWidget();

Map.add(legend);
